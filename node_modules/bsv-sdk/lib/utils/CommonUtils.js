"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FT = exports.getMergeTime = exports.reverceFtByteString = exports.sleep = void 0;
function sleep(time) {
    return __awaiter(this, void 0, void 0, function* () {
        return new Promise((resolve, reject) => {
            setTimeout(() => {
                resolve('');
            }, time * 1000);
        });
    });
}
exports.sleep = sleep;
function reverceFtByteString(str) {
    str = str.substr(0, str.length - 8);
    let ret = '';
    for (let i = 0; i < str.length; i += 2) {
        ret = str[i] + str[i + 1] + ret;
    }
    return ret;
}
exports.reverceFtByteString = reverceFtByteString;
function getMergeTime(count, mergeTime = 0) {
    let utxoCount = count;
    if (utxoCount <= 20) {
        return [utxoCount, mergeTime];
    }
    else {
        utxoCount -= 19;
        mergeTime++;
        return getMergeTime(utxoCount, mergeTime);
    }
}
exports.getMergeTime = getMergeTime;
exports.FT = {
    "MC": {
        codehash: "777e4dd291059c9f7a0fd563f7204576dcceb791",
        genesis: "54256eb1b9c815a37c4af1b82791ec6bdf5b3fa3",
        genesisTxid: "fdc76b124e88f345a4400d7408588bf5dca8d3e8c8c4c306d6d4a77f1df8043e",
        sensibleId: "3e04f81d7fa7d4d606c3c4c8e8d3a8dcf58b5808740d40a445f3884e126bc7fd00000000"
    },
    "SHOW": {
        codehash: "777e4dd291059c9f7a0fd563f7204576dcceb791",
        genesis: "54754f357afafa9e77488de7135f403276e03a9b",
        genesisTxid: "6d5804bc1a433df8d1200fd28541e736a96452de311a87d088b30aa8cb8d3712",
        sensibleId: "12378dcba80ab388d0871a31de5264a936e74185d20f20d1f83d431abc04586d00000000"
    }
};
