import { Balance, NftCollection, NftUtxo, Token, TokenBalance, TokenUtxo, Utxo } from "@sensible-contract/abstract-provider";
import { SensibleApi } from "@sensible-contract/sensible-api";
import { BaseProvider, NETWORK } from "./base-provider";
export declare class SensiblequeryProvider extends BaseProvider {
    sensibleApi: SensibleApi;
    constructor(network?: NETWORK, apiPrefix?: string);
    getUtxos(address: string, queryParams?: {
        cursor: number;
        size: number;
    }): Promise<Utxo[]>;
    getBalance(address: string): Promise<Balance>;
    getRawTx(txid: string): Promise<string>;
    broadcast(rawtx: string): Promise<string>;
    getTokenUtxos(codehash: string, genesis: string, address: string, queryParams?: {
        cursor: number;
        size: number;
    }): Promise<TokenUtxo[]>;
    getTokenBalance(codehash: string, genesis: string, address: string): Promise<TokenBalance>;
    getTokenList(address: string, queryParams?: {
        cursor: number;
        size: number;
    }): Promise<Token[]>;
    getNftUtxos(codehash: string, genesis: string, address: string, queryParams?: {
        cursor: number;
        size: number;
    }): Promise<NftUtxo[]>;
    getNftUtxo(codehash: string, genesis: string, tokenIndex: string): Promise<NftUtxo>;
    getNftCollectionList(address: string, queryParams?: {
        cursor: number;
        size: number;
    }): Promise<NftCollection[]>;
    getIsUtxoSpent(txId: string, outputIndex: number): Promise<boolean>;
    getNftAuctionUtxo(codehash: string, nftid: string): Promise<{
        txId: string;
        outputIndex: number;
    }>;
    getNftSellUtxo(codehash: string, genesis: string, tokenIndex: string): Promise<{
        txId: string;
        outputIndex: number;
        sellerAddress: string;
        satoshisPrice: number;
    }>;
}
