/**
 * AUTO_GENERATED Do not change this file directly, use config.ts file instead
 *
 * @version 5
 */
import { AxiosRequestConfig } from "axios";
import { SwaggerResponse } from "./config";
import { GetAddressAddressContractHistoryQueryParams, GetAddressAddressContractHistoryTxQueryParams, GetAddressAddressHistoryQueryParams, GetAddressAddressHistoryTxQueryParams, GetAddressAddressUtxoQueryParams, GetAddressAddressUtxoDataQueryParams, GetBlockTxsBlkidQueryParams, GetBlocksQueryParams, GetContractHistoryCodehashGenesisQueryParams, GetContractHistoryCodehashGenesisAddressQueryParams, GetContractSwapAggregateAmountCodehashGenesisQueryParams, GetContractSwapAggregateCodehashGenesisQueryParams, GetContractSwapDataCodehashGenesisQueryParams, GetFtHistoryCodehashGenesisAddressQueryParams, GetFtIncomeHistoryCodehashGenesisAddressQueryParams, GetFtOwnersCodehashGenesisQueryParams, GetFtSummaryDataAddressQueryParams, GetFtSummaryAddressQueryParams, GetFtTransferTimesCodehashGenesisQueryParams, GetFtUtxoDataCodehashGenesisAddressQueryParams, GetFtUtxoCodehashGenesisAddressQueryParams, GetHeightHeightBlockTxsQueryParams, GetHeightHeightTxTxidInsQueryParams, GetHeightHeightTxTxidOutsQueryParams, GetNftAuctionUtxoDetailCodehashNftidQueryParams, GetNftDetailCodehashGenesisAddressQueryParams, GetNftHistoryCodehashGenesisAddressQueryParams, GetNftOwnersCodehashGenesisQueryParams, GetNftSellUtxoQueryParams, GetNftSellUtxoByAddressAddressQueryParams, GetNftSellUtxoDetailCodehashGenesisToken_indexQueryParams, GetNftSellUtxoCodehashGenesisQueryParams, GetNftSummaryAddressQueryParams, GetNftTransferTimesCodehashGenesisTokenidQueryParams, GetNftUtxoDataCodehashGenesisAddressQueryParams, GetNftUtxoListCodehashGenesisQueryParams, GetNftUtxoCodehashGenesisAddressQueryParams, GetTxTxidInsQueryParams, GetTxTxidOutsQueryParams, ControllerTxRequest, ControllerTxsRequest, ModelAddressTokenUTXOResp, ModelAddressUTXOResp, ModelBalanceResp, ModelBlockInfoResp, ModelBlockTokenVolumeResp, ModelBlockchainInfoResp, ModelContractSwapAggregateAmountResp, ModelContractSwapAggregateResp, ModelContractSwapDataResp, ModelFTInfoResp, ModelFTOwnerBalanceResp, ModelFTOwnerBalanceWithUtxoCountResp, ModelFTSummaryByAddressResp, ModelFTSummaryDataByAddressResp, ModelMempoolInfoResp, ModelNFTAuctionResp, ModelNFTInfoResp, ModelNFTOwnerResp, ModelNFTSellResp, ModelNFTSummaryByAddressResp, ModelResponse, ModelTokenCodeHashResp, ModelTokenInfoResp, ModelTxInResp, ModelTxInSpentResp, ModelTxInfoResp, ModelTxOutHistoryResp, ModelTxOutResp, ModelTxOutStatusResp, ModelTxStandardOutResp, ModelWelcome } from "./types";
export declare function template(path: string, obj?: {
    [x: string]: any;
}): string;
/**
 * Welcome message
 */
export declare const get: {
    (configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelWelcome;
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过地址address获取balance
 */
export declare const getAddressAddressBalance: {
    (address: string, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelBalanceResp;
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过地址address获取合约相关tx历史列表，返回详细输入/输出
 */
export declare const getAddressAddressContractHistory: {
    (address: string, queryParams: GetAddressAddressContractHistoryQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelTxOutHistoryResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过地址address获取合约相关tx历史列表，返回tx概要
 */
export declare const getAddressAddressContractHistoryTx: {
    (address: string, queryParams: GetAddressAddressContractHistoryTxQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelTxInfoResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过地址address获取相关tx历史列表，返回详细输入/输出
 */
export declare const getAddressAddressHistory: {
    (address: string, queryParams: GetAddressAddressHistoryQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelTxOutHistoryResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过地址address获取相关tx历史列表，返回tx概要
 */
export declare const getAddressAddressHistoryTx: {
    (address: string, queryParams: GetAddressAddressHistoryTxQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelTxInfoResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过地址address获取相关常规utxo列表
 */
export declare const getAddressAddressUtxo: {
    (address: string, queryParams: GetAddressAddressUtxoQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelTxStandardOutResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过地址address获取相关常规utxo列表，和数量信息
 */
export declare const getAddressAddressUtxoData: {
    (address: string, queryParams: GetAddressAddressUtxoDataQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelAddressUTXOResp;
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过区块blkid获取区块概述
 */
export declare const getBlockIdBlkid: {
    (blkid: string, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelBlockInfoResp;
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过区块blkid获取区块包含的Tx概述列表
 */
export declare const getBlockTxsBlkid: {
    (blkid: string, queryParams: GetBlockTxsBlkidQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelTxInfoResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 获取最新区块位置、同步状态等信息
 */
export declare const getBlockchainInfo: {
    (configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelBlockchainInfoResp;
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 获取指定高度范围内的区块概述列表
 */
export declare const getBlocks: {
    (queryParams: GetBlocksQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelBlockInfoResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过溯源genesis获取任何地址相关tx历史列表，返回详细输入/输出
 */
export declare const getContractHistoryCodehashGenesis: {
    (codehash: string, genesis: string, queryParams: GetContractHistoryCodehashGenesisQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelTxOutHistoryResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过溯源genesis获取某地址相关tx历史列表，返回详细输入/输出
 */
export declare const getContractHistoryCodehashGenesisAddress: {
    (codehash: string, genesis: string, address: string, queryParams: GetContractHistoryCodehashGenesisAddressQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelTxOutHistoryResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 查询Swap合约在区块中的聚合Amount数据，以合约CodeHash+GenesisID来确认一种Swap
 */
export declare const getContractSwapAggregateAmountCodehashGenesis: {
    (codehash: string, genesis: string, queryParams: GetContractSwapAggregateAmountCodehashGenesisQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelContractSwapAggregateAmountResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 查询Swap合约在区块中的聚合价格数据，以合约CodeHash+GenesisID来确认一种Swap
 */
export declare const getContractSwapAggregateCodehashGenesis: {
    (codehash: string, genesis: string, queryParams: GetContractSwapAggregateCodehashGenesisQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelContractSwapAggregateResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 查询Swap合约在区块中的每次交易数据，以合约CodeHash+GenesisID来确认一种Swap
 */
export declare const getContractSwapDataCodehashGenesis: {
    (codehash: string, genesis: string, queryParams: GetContractSwapDataCodehashGenesisQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelContractSwapDataResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 查询某人持有的某FT Token的余额，同时返回UTXO数量
 */
export declare const getFtBalanceCodehashGenesisAddress: {
    (codehash: string, genesis: string, address: string, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelFTOwnerBalanceWithUtxoCountResp;
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 查询所有FT codehash简述
 */
export declare const getFtCodehashAll: {
    (configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelTokenCodeHashResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 查询使用某codehash的FT Token简述
 */
export declare const getFtCodehashInfoCodehash: {
    (codehash: string, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelFTInfoResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 查询使用某codehash+genesis的FT Token简述
 */
export declare const getFtGenesisInfoCodehashGenesis: {
    (codehash: string, genesis: string, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelFTInfoResp;
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过FT合约CodeHash+溯源genesis获取地址相关tx历史列表，返回详细输入/输出
 */
export declare const getFtHistoryCodehashGenesisAddress: {
    (codehash: string, genesis: string, address: string, queryParams: GetFtHistoryCodehashGenesisAddressQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelTxOutHistoryResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过FT合约CodeHash+溯源genesis获取地址相关tx历史列表，返回详细输出历史，并附带输入来源
 */
export declare const getFtIncomeHistoryCodehashGenesisAddress: {
    (codehash: string, genesis: string, address: string, queryParams: GetFtIncomeHistoryCodehashGenesisAddressQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelTxOutHistoryResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 查询所有FT Token简述
 */
export declare const getFtInfoAll: {
    (configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelFTInfoResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 查询FT Token的持有人。获得每个地址的token余额
 */
export declare const getFtOwnersCodehashGenesis: {
    (codehash: string, genesis: string, queryParams: GetFtOwnersCodehashGenesisQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelFTOwnerBalanceResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 查询某人持有的FT Token列表。获得每个token的余额
 */
export declare const getFtSummaryAddress: {
    (address: string, queryParams: GetFtSummaryAddressQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelFTSummaryByAddressResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 查询某人持有的FT Token列表。获得每个token的余额。并返回token总量
 */
export declare const getFtSummaryDataAddress: {
    (address: string, queryParams: GetFtSummaryDataAddressQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelFTSummaryDataByAddressResp;
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 查询FT Token在区块中的转移数量，以合约CodeHash+GenesisID来确认一种FT
 */
export declare const getFtTransferTimesCodehashGenesis: {
    (codehash: string, genesis: string, queryParams: GetFtTransferTimesCodehashGenesisQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelBlockTokenVolumeResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过FT合约CodeHash+溯源genesis获取某地址的utxo列表
 */
export declare const getFtUtxoCodehashGenesisAddress: {
    (codehash: string, genesis: string, address: string, queryParams: GetFtUtxoCodehashGenesisAddressQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelTxOutResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过FT合约CodeHash+溯源genesis获取某地址的utxo列表，和数量信息
 */
export declare const getFtUtxoDataCodehashGenesisAddress: {
    (codehash: string, genesis: string, address: string, queryParams: GetFtUtxoDataCodehashGenesisAddressQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelAddressTokenUTXOResp;
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * GetRawMempool, get txid list in mempool
 */
export declare const getGetrawmempool: {
    (configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: string[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过区块height获取区块概述
 */
export declare const getHeightHeightBlock: {
    (height: number, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelBlockInfoResp;
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过区块height获取区块包含的Tx概述列表
 */
export declare const getHeightHeightBlockTxs: {
    (height: number, queryParams: GetHeightHeightBlockTxsQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelTxInfoResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过交易txid和交易被打包的区块高度height获取交易原数据rawtx
 */
export declare const getHeightHeightRawtxTxid: {
    (height: number, txid: string, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: string;
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过交易txid和交易被打包的区块高度height获取交易概述
 */
export declare const getHeightHeightTxTxid: {
    (height: number, txid: string, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelTxInfoResp;
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过交易txid和index和交易被打包的区块高度height获取指定交易输入信息
 */
export declare const getHeightHeightTxTxidInIndex: {
    (height: number, txid: string, index: number, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelTxInResp;
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过交易txid和交易被打包的区块高度height获取交易所有输入信息列表
 */
export declare const getHeightHeightTxTxidIns: {
    (height: number, txid: string, queryParams: GetHeightHeightTxTxidInsQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelTxInResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过交易txid和index和交易被打包的区块高度height获取指定交易输出信息
 */
export declare const getHeightHeightTxTxidOutIndex: {
    (height: number, txid: string, index: number, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelTxOutStatusResp;
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过交易txid和交易被打包的区块高度height获取交易所有输出信息列表
 */
export declare const getHeightHeightTxTxidOuts: {
    (height: number, txid: string, queryParams: GetHeightHeightTxTxidOutsQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelTxOutStatusResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 获取mempool信息
 */
export declare const getMempoolInfo: {
    (configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelMempoolInfoResp;
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过拍卖的CodeHash和NFT ID获取具体NFTAuction合约utxo
 */
export declare const getNftAuctionUtxoDetailCodehashNftid: {
    (codehash: string, nftid: string, queryParams: GetNftAuctionUtxoDetailCodehashNftidQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelNFTAuctionResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 查询所有NFT CodeHash简述
 */
export declare const getNftCodehashAll: {
    (configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelTokenCodeHashResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 查询使用某codehash的NFT Token简述
 */
export declare const getNftCodehashInfoCodehash: {
    (codehash: string, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelNFTInfoResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 查询某人持有的某NFT Token的所持有的NFT数量
 */
export declare const getNftDetailCodehashGenesisAddress: {
    (codehash: string, genesis: string, address: string, queryParams: GetNftDetailCodehashGenesisAddressQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelNFTOwnerResp;
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 查询使用某codehash+genesis的NFT Token简述
 */
export declare const getNftGenesisInfoCodehashGenesis: {
    (codehash: string, genesis: string, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelNFTInfoResp;
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过NFT合约CodeHash+溯源genesis获取地址相关tx历史列表，返回详细输入/输出
 */
export declare const getNftHistoryCodehashGenesisAddress: {
    (codehash: string, genesis: string, address: string, queryParams: GetNftHistoryCodehashGenesisAddressQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelTxOutHistoryResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 查询所有NFT Token简述
 */
export declare const getNftInfoAll: {
    (configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelNFTInfoResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 查询NFT Token的持有人。获得每个人持有的NFT数量
 */
export declare const getNftOwnersCodehashGenesis: {
    (codehash: string, genesis: string, queryParams: GetNftOwnersCodehashGenesisQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelNFTOwnerResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 获取NFTSell合约的utxo列表
 */
export declare const getNftSellUtxo: {
    (queryParams: GetNftSellUtxoQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelNFTSellResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过出售人地址获取NFTSell合约utxo列表
 */
export declare const getNftSellUtxoByAddressAddress: {
    (address: string, queryParams: GetNftSellUtxoByAddressAddressQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelNFTSellResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过NFT的CodeHash+溯源genesis获取NFTSell合约utxo列表
 */
export declare const getNftSellUtxoCodehashGenesis: {
    (codehash: string, genesis: string, queryParams: GetNftSellUtxoCodehashGenesisQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelNFTSellResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过NFT的CodeHash+溯源genesis和NFT Token Index获取具体NFTSell合约utxo
 */
export declare const getNftSellUtxoDetailCodehashGenesisToken_index: {
    (codehash: string, genesis: string, token_index: number, queryParams: GetNftSellUtxoDetailCodehashGenesisToken_indexQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelNFTSellResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 查询某人持有的所有NFT Token列表。获得持有的nft数量计数
 */
export declare const getNftSummaryAddress: {
    (address: string, queryParams: GetNftSummaryAddressQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelNFTSummaryByAddressResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 查询NFT Token在区块中的转移次数，以合约CodeHash+GenesisID，和tokenId来确认一种NFT。
 */
export declare const getNftTransferTimesCodehashGenesisTokenid: {
    (codehash: string, genesis: string, tokenid: number, queryParams: GetNftTransferTimesCodehashGenesisTokenidQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelBlockTokenVolumeResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过NFT合约CodeHash+溯源genesis获取某地址的utxo列表
 */
export declare const getNftUtxoCodehashGenesisAddress: {
    (codehash: string, genesis: string, address: string, queryParams: GetNftUtxoCodehashGenesisAddressQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelTxOutResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过NFT合约CodeHash+溯源genesis获取某地址的utxo列表，和数量信息
 */
export declare const getNftUtxoDataCodehashGenesisAddress: {
    (codehash: string, genesis: string, address: string, queryParams: GetNftUtxoDataCodehashGenesisAddressQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelAddressTokenUTXOResp;
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过NFT合约CodeHash+溯源genesis获取某tokenId的utxo
 */
export declare const getNftUtxoDetailCodehashGenesisToken_index: {
    (codehash: string, genesis: string, token_index: number, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelTxOutResp;
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过NFT合约CodeHash+溯源genesis按tokenIndex顺序获取所有的utxo列表，附带总量信息
 */
export declare const getNftUtxoListCodehashGenesis: {
    (codehash: string, genesis: string, queryParams: GetNftUtxoListCodehashGenesisQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelAddressTokenUTXOResp;
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过交易txid获取交易原数据rawtx
 */
export declare const getRawtxTxid: {
    (txid: string, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: string;
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 将交易txid重新发送到woc
 */
export declare const getRelayTxid: {
    (txid: string, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: string;
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 查询Token简述
 */
export declare const getTokenInfo: {
    (configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelTokenInfoResp;
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过交易txid获取交易概述
 */
export declare const getTxTxid: {
    (txid: string, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelTxInfoResp;
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过交易txid和index获取指定交易输入信息
 */
export declare const getTxTxidInIndex: {
    (txid: string, index: number, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelTxInResp;
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过交易txid获取交易所有输入信息列表
 */
export declare const getTxTxidIns: {
    (txid: string, queryParams: GetTxTxidInsQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelTxInResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过交易txid和index获取指定交易输出信息
 */
export declare const getTxTxidOutIndex: {
    (txid: string, index: number, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelTxOutStatusResp;
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过交易txid和index获取指定交易输出是否被花费状态
 */
export declare const getTxTxidOutIndexSpent: {
    (txid: string, index: number, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelTxInSpentResp;
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * 通过交易txid获取交易所有输出信息列表
 */
export declare const getTxTxidOuts: {
    (txid: string, queryParams: GetTxTxidOutsQueryParams, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: ModelTxOutStatusResp[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * Push Tx
 */
export declare const postPushtx: {
    (requestBody: ControllerTxRequest, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: string;
    }>>;
    /** Key is end point string without base url */
    key: string;
};
/**
 * Push Tx list
 */
export declare const postPushtxs: {
    (requestBody: ControllerTxsRequest, configOverride?: AxiosRequestConfig): Promise<SwaggerResponse<ModelResponse & {
        data?: string[];
    }>>;
    /** Key is end point string without base url */
    key: string;
};
export declare const _CONSTANT0: {
    headers: {
        "Content-Type": string;
        Accept: string;
    };
};
