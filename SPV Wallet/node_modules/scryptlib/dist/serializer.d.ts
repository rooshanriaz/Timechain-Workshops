import { bsv } from './utils';
export declare const STATE_LEN_2BYTES = 2;
export declare const STATE_LEN_4BYTES = 4;
export declare type State = Record<string, boolean | number | bigint | string>;
export declare type StateArray = Array<boolean | number | bigint | string>;
export declare function serializeState(state: State | StateArray, stateBytes?: number, schema?: State | StateArray): string;
declare class OpState {
    op: any;
    constructor(op: any);
    toNumber(): number | string | bigint;
    toBigInt(): bigint;
    toBoolean(): boolean;
    toHex(): string;
    toString(arg?: string): any;
}
export declare type OpStateArray = Array<OpState>;
export declare function deserializeState(s: string | bsv.Script, schema?: State | StateArray): OpStateArray | State | StateArray;
export {};
