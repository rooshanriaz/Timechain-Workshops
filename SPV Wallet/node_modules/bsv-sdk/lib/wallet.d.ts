import * as bsv from "@sensible-contract/bsv";
import { MetaSVProvider } from "showpay-providers";
import { Receiver, TransferResp } from "./types";
import { Utxo } from "showpay-providers/lib/type/type";
import { AuthorizationOption } from "showpay-providers/lib/metasv-provider";
export default class Wallet {
    privateKey: bsv.PrivateKey;
    publicKey: bsv.PublicKey;
    address: bsv.Address;
    provider: MetaSVProvider;
    feeb: number;
    constructor(wif: string, network: "mainnet" | "testnet", metasvAuth: AuthorizationOption, feeb?: number);
    transfer(receivers: Receiver[], broadcast?: boolean): Promise<TransferResp>;
    transferAll(receiverAddress: string, broadcast: boolean): Promise<TransferResp>;
    getAddressUtxos(address: string): Promise<Utxo[]>;
}
