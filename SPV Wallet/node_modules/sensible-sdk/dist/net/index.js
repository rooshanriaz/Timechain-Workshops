"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Net = void 0;
const BrowserNet_1 = require("./BrowserNet");
const ServerNet_1 = require("./ServerNet");
function toLowerHeader(headers) {
    let newHeaders = {};
    for (var id in headers) {
        let lowerId = id.toLowerCase();
        newHeaders[lowerId] = headers[id];
    }
    return newHeaders;
}
class Net {
    static httpGet(url, params, config) {
        if (config && config.headers) {
            config.headers = toLowerHeader(config.headers);
        }
        let _process = process;
        if (!_process.browser) {
            return ServerNet_1.ServerNet.httpGet(url, params, null, config);
        }
        else {
            if (config && config.headers) {
                //remove unsafe header,should be added in browser
                delete config.headers["accept-encoding"];
            }
            return BrowserNet_1.BrowserNet.httpGet(url, params, null, config);
        }
    }
    static httpPost(url, params, config) {
        if (config && config.headers) {
            config.headers = toLowerHeader(config.headers);
        }
        let _process = process;
        if (!_process.browser) {
            return ServerNet_1.ServerNet.httpPost(url, params, null, config);
        }
        else {
            if (config && config.headers) {
                delete config.headers["accept-encoding"];
            }
            return BrowserNet_1.BrowserNet.httpPost(url, params, null, config);
        }
    }
}
exports.Net = Net;
//default timeout
Net.timeout = 3 * 60 * 1000;
